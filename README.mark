2/15/2019
– Added dependencies for Spring Hibernate (object relational model) mapping libary.
– Created data classes marked with the javax.persistance.* API for use with Spring Hibernate.
– Added database initialization script.
– Created configuration file for setting database credentials.
– Created configuration file for hash options (bcrypt/scrypt + parameters)

2/22/2019
- Added high-level authentication logic in AuthenticationManager
- Added logic for validating and applying the hash functions depending on the algorithm choice in the configuration.
- Validated the password hash in the current authenticate methods.
- Added several methods for communicating with the API layer for authentication and registration.
- Generated login tokens based on the duration.

3/1/2019
- Inserted authentication steps for checking for locked accounts or accounts requiring verification.
- Added configuration option for the various username/email combination required.
- Added configuration option for whether or not email verification is required.
- Added account registration in AuthenticationManager.
- Validate user authentication tokens.

3/8/2019
- Made tests for registration, testing the usage of bcrypt and scrypt.
- Made tests for checking the creation of password reset tokens.
- Created abstraction UserIdentifier for the common case of calling methods by either username, email, or a value representing a username or email.
- Added password reset token generation.
- Added password reset with token.

3/22/2019
- Worked on integration tests as a group, particularly figuring out how Spring works with testing contexts, which we didn't get much results from due to Spring and database difficulties. Brian made some breakthrough progress later on however.
- Added documentation for most all of the core auth1 methods, particually in AuthenticationManager
- Documented data classes and their formats/semantics.

3/29/2019
- Adapted TOTP code from Appendix A of RFC 6238 (TOTP: Time-Based One-Time Password Algorithm).
- Added TOTP code requirement/checking in the authenticate method (if configured).
- Added endpoints for TOTP registration/setup. First endpoint creates a tentative configuration and the second one requires the user to provide the TOTP code to confirm it and apply the changes.
- Inserted logging statements into the AuthenticationManager.

4/5/2019
- Created simple Python Flask app that interacts with the Auth1 API.
- Added pages to Flask app for the login and checking of the authentication token.
- Added creation of LoginRecord objects to the authentication process.
- Added additional parameters to authenticate to account for user ip and user agent.

4/12/2019
- Added TOTP registration logic to the example front end.
- Display QR code for TOTP setup.
- Fix bugs in the API that were noticable when testing on the front end.
- Fix key lengths that were too long (e.g. 80 bytes instead of 80 bits)

4/19/2019
- Added TOTP to login form in example application.
- Fixed bug with duplicate TentativeTOTPConfigurations being produced.
- Reformatted parts of example application frontend.

4/26/2019
- Create documentation of entire Auth1 API.
